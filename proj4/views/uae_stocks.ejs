<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>UAE Stocks Portfolio</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
</head>
<body>
    <div class="container mt-4">
        <h1 class="mb-4">UAE Stocks Portfolio</h1>
        
        <!-- Portfolio Summary -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Total Value</h5>
                        <h3 class="card-text text-primary">AED <%= (summary?.totalValue || 0).toFixed(2) %></h3>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Total Investment</h5>
                        <h3 class="card-text text-info">AED <%= (summary?.totalInvestment || 0).toFixed(2) %></h3>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Total Profit/Loss</h5>
                        <h3 class="card-text <%= (summary?.totalProfitLoss || 0) >= 0 ? 'text-success' : 'text-danger' %>">
                            AED <%= (summary?.totalProfitLoss || 0).toFixed(2) %>
                        </h3>
                    </div>
                </div>
            </div>
        </div>

        <!-- Stocks Table -->
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title">UAE Stocks</h5>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Symbol</th>
                                <th>Name</th>
                                <th>Shares</th>
                                <th>Purchase Price (AED)</th>
                                <th>Current Price (AED)</th>
                                <th>Total Value (AED)</th>
                                <th>Profit/Loss (AED)</th>
                                <th>Purchase Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% stocks.forEach(stock => { %>
                                <tr>
                                    <td data-symbol="<%= stock.symbol %>"><%= stock.symbol %></td>
                                    <td data-name="<%= stock.name %>"><%= stock.name %></td>
                                    <td data-shares="<%= stock.shares %>"><%= stock.shares %></td>
                                    <td data-purchasePrice="<%= stock.purchase_price %>"><%= stock.purchase_price.toFixed(2) %></td>
                                    <td data-currentPrice="<%= stock.current_price %>">
                                        <%= stock.current_price ? stock.current_price.toFixed(2) : 'N/A' %>
                                    </td>
                                    <td data-totalValue="<%= stock.current_price * stock.shares %>">
                                        <%= ((stock.current_price || 0) * stock.shares).toFixed(2) %>
                                    </td>
                                    <td data-profitLoss="<%= (stock.current_price - stock.purchase_price) * stock.shares %>"
                                        class="<%= ((stock.current_price - stock.purchase_price) * stock.shares) >= 0 ? 'text-success' : 'text-danger' %>">
                                        <%= (((stock.current_price || 0) - stock.purchase_price) * stock.shares).toFixed(2) %>
                                    </td>
                                    <td><%= moment(stock.purchase_date).format('YYYY-MM-DD') %></td>
                                    <td>
                                        <div class="btn-group">
                                            <button class="btn btn-sm btn-primary me-1" onclick="showEditModal('<%= stock.id %>', <%= JSON.stringify(stock) %>)">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <button class="btn btn-sm btn-success me-1" onclick="showSellModal('<%= stock.id %>', '<%= stock.symbol %>', <%= stock.shares %>)">
                                                <i class="bi bi-currency-dollar"></i>
                                            </button>
                                            <button class="btn btn-sm btn-danger" onclick="deleteStock('<%= stock.id %>')">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Add Stock Form -->
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Add New UAE Stock</h5>
                <form id="addStockForm" class="row g-3">
                    <div class="col-md-3">
                        <label for="symbol" class="form-label">Symbol</label>
                        <div class="symbol-search position-relative">
                            <input type="text" 
                                   class="form-control" 
                                   id="symbol" 
                                   name="symbol" 
                                   autocomplete="off"
                                   placeholder="Search UAE stocks..."
                                   required>
                            <div id="symbolSuggestions" class="position-absolute w-100 mt-1 d-none">
                                <div class="list-group shadow-sm">
                                    <!-- Suggestions will be populated here -->
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label for="shares" class="form-label">Shares</label>
                        <input type="number" class="form-control" id="shares" name="shares" required>
                    </div>
                    <div class="col-md-2">
                        <label for="purchase_price" class="form-label">Purchase Price (AED)</label>
                        <input type="number" step="0.01" class="form-control" id="purchase_price" name="purchase_price" required>
                    </div>
                    <div class="col-md-2">
                        <label for="purchase_date" class="form-label">Purchase Date</label>
                        <input type="date" class="form-control" id="purchase_date" name="purchase_date" 
                               value="<%= defaultDate %>" required>
                    </div>
                    <div class="col-md-3">
                        <label for="purchase_source" class="form-label">Source</label>
                        <input type="text" class="form-control" id="purchase_source" name="purchase_source">
                    </div>
                    <div class="col-12">
                        <label for="notes" class="form-label">Notes</label>
                        <textarea class="form-control" id="notes" name="notes" rows="2"></textarea>
                    </div>
                    <div class="col-12">
                        <button type="submit" class="btn btn-primary">Add Stock</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Stock Modal -->
    <div class="modal fade" id="editStockModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit UAE Stock</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editStockForm">
                        <input type="hidden" id="editStockId">
                        <div class="mb-3">
                            <label class="form-label">Shares</label>
                            <input type="number" class="form-control" id="editShares" name="shares" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Purchase Price (AED)</label>
                            <input type="number" step="0.01" class="form-control" id="editPurchasePrice" name="purchase_price" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Purchase Date</label>
                            <input type="date" class="form-control" id="editPurchaseDate" name="purchase_date" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Source</label>
                            <input type="text" class="form-control" id="editPurchaseSource" name="purchase_source">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Notes</label>
                            <textarea class="form-control" id="editNotes" name="notes" rows="2"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="updateStock()">Save Changes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Sell Stock Modal -->
    <div class="modal fade" id="sellStockModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Sell UAE Stock</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="sellStockForm">
                        <input type="hidden" id="sellStockId">
                        <div class="mb-3">
                            <label class="form-label">Stock Symbol</label>
                            <input type="text" class="form-control" id="sellStockSymbol" readonly>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Available Shares</label>
                            <input type="number" class="form-control" id="sellAvailableShares" readonly>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Shares to Sell</label>
                            <input type="number" class="form-control" id="sellShares" name="shares_sold" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Sell Price (AED)</label>
                            <input type="number" step="0.01" class="form-control" id="sellPrice" name="sell_price" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Sell Date</label>
                            <input type="date" class="form-control" id="sellDate" name="sell_date" 
                                   value="<%= defaultDate %>" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success" onclick="sellStock()">Sell Stock</button>
                </div>
            </div>
        </div>
    </div>

    <style>
        .symbol-search {
            position: relative;
        }
        #symbolSuggestions {
            z-index: 1000;
            max-height: 200px;
            overflow-y: auto;
        }
        .suggestion-item {
            cursor: pointer;
            padding: 0.5rem 1rem;
        }
        .suggestion-item:hover {
            background-color: #f8f9fa;
        }
        .suggestion-exchange {
            font-size: 0.8em;
            color: #6c757d;
        }
    </style>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Initialize modals
        const editModal = new bootstrap.Modal(document.getElementById('editStockModal'));
        const sellModal = new bootstrap.Modal(document.getElementById('sellStockModal'));

        function showEditModal(stockId, stock) {
            document.getElementById('editStockId').value = stockId;
            document.getElementById('editShares').value = stock.shares;
            document.getElementById('editPurchasePrice').value = stock.purchase_price;
            document.getElementById('editPurchaseDate').value = stock.purchase_date;
            document.getElementById('editPurchaseSource').value = stock.purchase_source || '';
            document.getElementById('editNotes').value = stock.notes || '';
            editModal.show();
        }

        function showSellModal(stockId, symbol, availableShares) {
            document.getElementById('sellStockId').value = stockId;
            document.getElementById('sellStockSymbol').value = symbol;
            document.getElementById('sellAvailableShares').value = availableShares;
            document.getElementById('sellShares').value = '';
            document.getElementById('sellPrice').value = '';
            sellModal.show();
        }

        async function updateStock() {
            const stockId = document.getElementById('editStockId').value;
            const formData = new FormData(document.getElementById('editStockForm'));
            const data = Object.fromEntries(formData.entries());
            
            try {
                const response = await fetch(`/api/uae-stocks/${stockId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                
                if (!response.ok) {
                    const error = await response.json();
                    throw new Error(error.error || 'Failed to update stock');
                }
                
                editModal.hide();
                window.location.reload();
            } catch (error) {
                alert(error.message);
            }
        }

        async function sellStock() {
            const stockId = document.getElementById('sellStockId').value;
            const formData = new FormData(document.getElementById('sellStockForm'));
            const data = Object.fromEntries(formData.entries());
            
            // Validate shares to sell
            const availableShares = parseInt(document.getElementById('sellAvailableShares').value);
            const sharesToSell = parseInt(data.shares_sold);
            
            if (sharesToSell > availableShares) {
                alert('Cannot sell more shares than available');
                return;
            }
            
            try {
                const response = await fetch(`/api/uae-stocks/${stockId}/sell`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                
                if (!response.ok) {
                    const error = await response.json();
                    throw new Error(error.error || 'Failed to sell stock');
                }
                
                const result = await response.json();
                sellModal.hide();
                alert(`Stock sold successfully! Profit/Loss: AED ${result.profitLoss.toFixed(2)}`);
                window.location.reload();
            } catch (error) {
                alert(error.message);
            }
        }

        let searchTimeout;
        const symbolInput = document.getElementById('symbol');
        const suggestionsDiv = document.getElementById('symbolSuggestions');

        symbolInput.addEventListener('input', function(e) {
            clearTimeout(searchTimeout);
            const query = e.target.value.trim();
            
            if (query.length < 2) {
                suggestionsDiv.classList.add('d-none');
                return;
            }

            searchTimeout = setTimeout(async () => {
                try {
                    const response = await fetch(`/api/uae-stocks/search?query=${encodeURIComponent(query)}`);
                    if (!response.ok) throw new Error('Search failed');
                    
                    const suggestions = await response.json();
                    
                    if (suggestions.length > 0) {
                        const suggestionHtml = suggestions.map(stock => `
                            <a href="#" class="list-group-item list-group-item-action suggestion-item" 
                               data-symbol="${stock.symbol}">
                                <div class="d-flex justify-content-between align-items-center">
                                    <strong>${stock.symbol}</strong>
                                    <span class="suggestion-exchange">${stock.exchange}</span>
                                </div>
                                <small class="text-muted">${stock.name}</small>
                            </a>
                        `).join('');
                        
                        suggestionsDiv.querySelector('.list-group').innerHTML = suggestionHtml;
                        suggestionsDiv.classList.remove('d-none');
                    } else {
                        suggestionsDiv.classList.add('d-none');
                    }
                } catch (error) {
                    console.error('Error searching stocks:', error);
                }
            }, 300);
        });

        // Handle suggestion clicks
        suggestionsDiv.addEventListener('click', function(e) {
            e.preventDefault();
            const suggestionItem = e.target.closest('.suggestion-item');
            if (suggestionItem) {
                symbolInput.value = suggestionItem.dataset.symbol;
                suggestionsDiv.classList.add('d-none');
            }
        });

        // Hide suggestions when clicking outside
        document.addEventListener('click', function(e) {
            if (!e.target.closest('.symbol-search')) {
                suggestionsDiv.classList.add('d-none');
            }
        });

        document.getElementById('addStockForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            const data = Object.fromEntries(formData.entries());
            
            try {
                const response = await fetch('/api/uae-stocks', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                
                if (!response.ok) {
                    const error = await response.json();
                    throw new Error(error.error || 'Failed to add stock');
                }
                
                window.location.reload();
            } catch (error) {
                alert(error.message);
            }
        });

        async function deleteStock(id) {
            if (!confirm('Are you sure you want to delete this stock?')) return;
            
            try {
                const response = await fetch(`/api/uae-stocks/${id}`, {
                    method: 'DELETE'
                });
                
                if (!response.ok) {
                    const error = await response.json();
                    throw new Error(error.error || 'Failed to delete stock');
                }
                
                window.location.reload();
            } catch (error) {
                alert(error.message);
            }
        }
    </script>
</body>
</html>
